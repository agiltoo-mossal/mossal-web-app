mutation UpdateOrganization(
  $organizationId: ID!
  $organizationInput: OrganizationUpdateInput!
) {
  updateOrganization(
    organizationId: $organizationId
    organizationInput: $organizationInput
  )
}
mutation DeleteCategorySociopro($categorySocioproId: ID!) {
  deleteCategorySociopro(categorySocioproId: $categorySocioproId)
}
mutation UpdateCategorySociopro(
  $categorySocioproInput: CategorySocioproUpdateInput!
  $categorySocioproId: ID!
) {
  updateCategorySociopro(
    categorySocioproInput: $categorySocioproInput
    categorySocioproId: $categorySocioproId
  )
}
mutation CreateCategorySocioproService(
  $categorySocioproServiceInput: CategorySocioproServiceInput!
  $categorySocioproId: ID!
  $organisationServiceId: ID!
) {
  createCategorySocioproService(
    categorySocioproServiceInput: $categorySocioproServiceInput
    categorySocioproId: $categorySocioproId
    organisationServiceId: $organisationServiceId
  ) {
    id
  }
}

mutation CreateCategorySociopro(
  $categorySocioproInput: CategorySocioproInput!
  $organizationId: ID!
) {
  createCategorySociopro(
    categorySocioproInput: $categorySocioproInput
    organizationId: $organizationId
  ) {
    id
    title
    organizationId
    createdAt
    updatedAt
  }
}
query FetchCategorySociopros($queryConfig: QueryDataConfigInput!) {
  fetchCategorySociopros(queryConfig: $queryConfig) {
    pagination {
      totalItems
      pageCount
      currentPage
      pageSize
    }
    results {
      id
      title
      organizationId
      createdAt
      updatedAt
    }
  }
}
query FetchServices($queryConfig: QueryDataConfigInput) {
  fetchServices(queryConfig: $queryConfig) {
    pagination {
      totalItems
      pageCount
      currentPage
      pageSize
    }
    results {
      id
      title
      description
      createdAt
      updatedAt
      identifier
      refundDurationMonth
      available
    }
  }
}

mutation CreateOrganistionService(
  $organisationServiceInput: OrganisationServiceInput!
  $organisationId: ID!
  $serviceId: ID!
) {
  createOrganisationService(
    organisationServiceInput: $organisationServiceInput
    organisationId: $organisationId
    serviceId: $serviceId
  ) {
    createdAt
    updatedAt
    id
    amount
    amountUnit
    refundDuration
    refundDurationUnit
    activated
    activatedAt
    activationDurationDay
    autoValidate
    organizationId
    serviceId
    organization {
      id
    }
    service {
      id
      title
    }
    events {
      id
      title
    }
    categoriesociopro {
      id
      title
    }
  }
}

query FetchOrganisationServiceByOrganisationIdAndServiceId(
  $organisationId: ID!
  $serviceId: ID!
) {
  fetchOrganisationServiceByOrganisationIdAndServiceId(
    organisationId: $organisationId
    serviceId: $serviceId
  ) {
    id
    amount
    amountUnit
    refundDuration
    refundDurationUnit
    activated
    activatedAt
    activationDurationDay
    autoValidate
    organizationId
    serviceId
    organization {
      id
    }
    service {
      id
      title
    }
    events {
      id
      title
    }
    categoriesociopro {
      id
      title
    }
  }
}
mutation CreateEvent($eventInput: EventInput!, $organizationServiceId: ID!) {
  createEvent(
    eventInput: $eventInput
    organizationServiceId: $organizationServiceId
  ) {
    id
    title
    description
    startDate
    endDate
    organisationService {
      id
    }
    createdAt
    updatedAt
  }
}

query FetchEvents($queryConfig: QueryDataConfigInput) {
  fetchEvents(queryConfig: $queryConfig) {
    pagination {
      totalItems
      pageCount
      currentPage
      pageSize
    }
    results {
      id
      title
      description
      startDate
      endDate
      organisationService {
        id
      }
      createdAt
      updatedAt
    }
  }
}
